using sysbus
using monitor

mach create "K210"

machine LoadPlatformDescription @platforms/cpus/kendryte_k210.repl

path add @/

showAnalyzer "uartAnalyzer" uart Antmicro.Renode.Analyzers.LoggingUartAnalyzer
uartAnalyzer TimestampFormat None

set report_repeating_line """
from Antmicro.Renode.Logging import ConsoleBackend 
ConsoleBackend.Instance.ReportRepeatingLines = True
"""

set add_hook """
def my_match(line):
    ok_to_kill_lines = [
        '*** TEST STATE: USER_INPUT',
        '*** TEST STATE: BENCHMARK',
        '*** END OF TEST ',
        '*** FATAL ***'
    ]
    return any(l in line for l in ok_to_kill_lines)

def my_hook(line):
    print line
    monitor.Parse("q")

Antmicro.Renode.Hooks.UartHooksExtensions.AddLineHook(monitor.Machine["sysbus.uart"], my_match, my_hook)
"""

python $add_hook

python $report_repeating_line 

sysbus Tag <0x50440000 0x10000> "SYSCTL"
sysbus Tag <0x50440018 0x4> "pll_lock" 0xFFFFFFFF
sysbus Tag <0x5044000C 0x4> "pll1"
sysbus Tag <0x50440008 0x4> "pll0"
sysbus Tag <0x50440020 0x4> "clk_sel0"
sysbus Tag <0x50440028 0x4> "clk_en_cent"
sysbus Tag <0x5044002c 0x4> "clk_en_peri"

# enable uart tx
uart WriteDoubleWord 0x8 0x1

macro reset
"""
    sysbus LoadELF $bin 
"""
runMacro $reset
